Last login: Wed Jun 22 07:49:30 on console
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$ #include <Wire.h>
Ryans-MacBook-Air:unlocker ryanbarnard$ #include <Adafruit_NFCShield_I2C.h>
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$ #define IRQ 6 // this trace must be cut and rewired!
Ryans-MacBook-Air:unlocker ryanbarnard$ #define RESET 8
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$ Adafruit_NFCShield_I2C nfc(IRQ, RESET);
-bash: syntax error near unexpected token `('
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$ //////////////////////////////////// SETUP
-bash: ////////////////////////////////////: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$ void setup() {
-bash: syntax error near unexpected token `('
Ryans-MacBook-Air:unlocker ryanbarnard$   // set up Serial library at 9600 bps
-bash: //: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$   Serial.begin(9600);
-bash: syntax error near unexpected token `9600'
Ryans-MacBook-Air:unlocker ryanbarnard$  
Ryans-MacBook-Air:unlocker ryanbarnard$   // find Adafruit RFID/NFC shield
-bash: //: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$   nfc.begin();
-bash: syntax error near unexpected token `;'
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$   uint32_t versiondata = nfc.getFirmwareVersion();
-bash: syntax error near unexpected token `('
Ryans-MacBook-Air:unlocker ryanbarnard$   if (! versiondata) {
-bash: syntax error near unexpected token `{'
Ryans-MacBook-Air:unlocker ryanbarnard$     Serial.print("Didn't find PN53x board");
-bash: syntax error near unexpected token `"Didn't find PN53x board"'
Ryans-MacBook-Air:unlocker ryanbarnard$     while (1); // halt
>   }
-bash: syntax error near unexpected token `}'
Ryans-MacBook-Air:unlocker ryanbarnard$   // Got ok data, print it out!
-bash: //: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$   Serial.print("Found chip PN5"); Serial.println((versiondata>>24) & 0xFF, HEX);
-bash: syntax error near unexpected token `"Found chip PN5"'
Ryans-MacBook-Air:unlocker ryanbarnard$   Serial.print("Firmware ver. "); Serial.print((versiondata>>16) & 0xFF, DEC);
-bash: syntax error near unexpected token `"Firmware ver. "'
Ryans-MacBook-Air:unlocker ryanbarnard$   Serial.print('.'); Serial.println((versiondata>>8) & 0xFF, DEC);
-bash: syntax error near unexpected token `'.''
Ryans-MacBook-Air:unlocker ryanbarnard$  
Ryans-MacBook-Air:unlocker ryanbarnard$   // configure board to read RFID tags
-bash: //: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$   nfc.SAMConfig();
-bash: syntax error near unexpected token `;'
Ryans-MacBook-Air:unlocker ryanbarnard$ Keyboard.begin(); //initiate the Keyboard
-bash: syntax error near unexpected token `;'
Ryans-MacBook-Air:unlocker ryanbarnard$ }
-bash: syntax error near unexpected token `}'
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$ /////////////////////////////////// LOOP
-bash: ///////////////////////////////////: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$ unsigned digit = 0;
-bash: unsigned: command not found
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$ void loop() {
-bash: syntax error near unexpected token `('
Ryans-MacBook-Air:unlocker ryanbarnard$   uint8_t success;
-bash: uint8_t: command not found
Ryans-MacBook-Air:unlocker ryanbarnard$   uint8_t uid[] = { 0, 0, 0, 0, 0, 0, 0 }; // Buffer to store the returned UID
-bash: uint8_t: command not found
-bash: //: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$   uint8_t uidLength; // Length of the UID (4 or 7 bytes depending on ISO14443A card type)
-bash: syntax error near unexpected token `('
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$   // wait for RFID card to show up!
-bash: //: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$   Serial.println("Waiting for an ISO14443A Card ...");
-bash: syntax error near unexpected token `"Waiting for an ISO14443A Card ..."'
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$    
Ryans-MacBook-Air:unlocker ryanbarnard$   // Wait for an ISO14443A type cards (Mifare, etc.). When one is found
-bash: syntax error near unexpected token `('
Ryans-MacBook-Air:unlocker ryanbarnard$   // 'uid' will be populated with the UID, and uidLength will indicate
-bash: //: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$   // if the uid is 4 bytes (Mifare Classic) or 7 bytes (Mifare Ultralight)
-bash: syntax error near unexpected token `('
Ryans-MacBook-Air:unlocker ryanbarnard$   success = nfc.readPassiveTargetID(PN532_MIFARE_ISO14443A, uid, &uidLength);
-bash: syntax error near unexpected token `('
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$   uint32_t cardidentifier = 0;
-bash: uint32_t: command not found
Ryans-MacBook-Air:unlocker ryanbarnard$  
Ryans-MacBook-Air:unlocker ryanbarnard$   if (success) {
-bash: syntax error near unexpected token `{'
Ryans-MacBook-Air:unlocker ryanbarnard$     // Found a card!
-bash: //: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$ 
Ryans-MacBook-Air:unlocker ryanbarnard$     Serial.print("Card detected #");
-bash: syntax error near unexpected token `"Card detected #"'
Ryans-MacBook-Air:unlocker ryanbarnard$     // turn the four byte UID of a mifare classic into a single variable #
-bash: //: is a directory
Ryans-MacBook-Air:unlocker ryanbarnard$     cardidentifier = uid[3];
-bash: cardidentifier: command not found
Ryans-MacBook-Air:unlocker ryanbarnard$     cardidentifier <<= 8; cardidentifier |= uid[2];
>     cardidentifier <<= 8; cardidentifier |= uid[1];
>     cardidentifier <<= 8; cardidentifier |= uid[0];
>     Serial.println(cardidentifier);
> 
>  
>     if (cardidentifier == 606061173) {
>       Keyboard.write('m');
>       Keyboard.write('y');
>        Keyboard.write('p');
>         Keyboard.write('a');
>          Keyboard.write('s');
>           Keyboard.write('s');
>            Keyboard.write('w');
>             Keyboard.write('o');
>              Keyboard.write('r');
>               Keyboard.write('d');
>               delay(5000); //makes sure the password isn't repeated
>     }
>   }
> }
